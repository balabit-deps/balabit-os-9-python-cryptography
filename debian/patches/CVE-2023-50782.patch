From 9c101390a199e3c8b2b969e3f27fd5a005543637 Mon Sep 17 00:00:00 2001
From: Alex Gaynor <alex.gaynor@gmail.com>
Date: Mon, 12 Dec 2022 19:26:06 -0500
Subject: [PATCH] Attempt to work-around wycheproof tests

---
 src/_cffi_src/openssl/rsa.py        |  8 ++++++++
 tests/hazmat/primitives/test_rsa.py |  5 +++--
 tests/wycheproof/test_rsa.py        | 20 +++++++++++++++-----
 3 files changed, 26 insertions(+), 7 deletions(-)

diff --git a/src/_cffi_src/openssl/rsa.py b/src/_cffi_src/openssl/rsa.py
index b1f6e4a4d645..3492d4588e11 100644
--- a/src/_cffi_src/openssl/rsa.py
+++ b/src/_cffi_src/openssl/rsa.py
@@ -16,6 +16,8 @@
 static const int RSA_PKCS1_OAEP_PADDING;
 static const int RSA_PKCS1_PSS_PADDING;
 static const int RSA_F4;
+
+static const int Cryptography_HAS_IMPLICIT_RSA_REJECTION;

 static const int Cryptography_HAS_RSA_OAEP_MD;
 static const int Cryptography_HAS_RSA_OAEP_LABEL;
@@ -49,4 +51,10 @@
 int (*EVP_PKEY_CTX_set0_rsa_oaep_label)(EVP_PKEY_CTX *, unsigned char *,
                                         int) = NULL;
 #endif
+
+#if defined(EVP_PKEY_CTRL_RSA_IMPLICIT_REJECTION)
+static const int Cryptography_HAS_IMPLICIT_RSA_REJECTION = 1;
+#else
+static const int Cryptography_HAS_IMPLICIT_RSA_REJECTION = 0;
+#endif
 """
diff --git a/tests/hazmat/primitives/test_rsa.py b/tests/hazmat/primitives/test_rsa.py
index 5a9fa19f37b4..7a4b2f1e3234 100644
--- a/tests/hazmat/primitives/test_rsa.py
+++ b/tests/hazmat/primitives/test_rsa.py
@@ -1713,8 +1713,9 @@ def test_unsupported_padding(self, backend):
             private_key.decrypt(b"0" * 64, DummyAsymmetricPadding())
 
     @pytest.mark.supported(
-        only_if=lambda backend: backend.rsa_padding_supported(
-            padding.PKCS1v15()
+        only_if=lambda backend: (
+            backend.rsa_padding_supported(padding.PKCS1v15())
+            and not backend._lib.Cryptography_HAS_IMPLICIT_RSA_REJECTION
         ),
         skip_message="Does not support PKCS1v1.5.",
     )
diff --git a/tests/wycheproof/test_rsa.py b/tests/wycheproof/test_rsa.py
index 0670e1c47c00..e2b8426fd0f6 100644
--- a/tests/wycheproof/test_rsa.py
+++ b/tests/wycheproof/test_rsa.py
@@ -240,8 +240,18 @@ def test_rsa_pkcs1_encryption(backend, wycheproof):
         )
         assert pt == binascii.unhexlify(wycheproof.testcase["msg"])
     else:
-        with pytest.raises(ValueError):
-            key.decrypt(
-                binascii.unhexlify(wycheproof.testcase["ct"]),
-                padding.PKCS1v15(),
-            )
+        if backend._lib.Cryptography_HAS_IMPLICIT_RSA_REJECTION:
+            try:
+                assert key.decrypt(
+                    binascii.unhexlify(wycheproof.testcase["ct"]),
+                    padding.PKCS1v15(),
+                ) != binascii.unhexlify(wycheproof.testcase["ct"])
+            except ValueError:
+                # Some raise ValueError due to length mismatch.
+                pass
+        else:
+            with pytest.raises(ValueError):
+                key.decrypt(
+                    binascii.unhexlify(wycheproof.testcase["ct"]),
+                    padding.PKCS1v15(),
+                )
